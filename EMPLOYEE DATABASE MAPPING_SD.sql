CREATE DATABASE Employee;
use employee;
SELECT EMP_ID,FIRST_NAME,LAST_NAME,GENDER,DEPT FROM emp_record_table;


SELECT EMP_ID,FIRST_NAME,LAST_NAME,GENDER,DEPT,EMP_RATING FROM emp_record_table WHERE EMP_RATING<"2";
SELECT EMP_ID,FIRST_NAME,LAST_NAME,GENDER,DEPT,EMP_RATING FROM emp_record_table WHERE EMP_RATING BETWEEN "2"AND "4";
SELECT EMP_ID,FIRST_NAME,LAST_NAME,GENDER,DEPT,EMP_RATING FROM emp_record_table WHERE EMP_RATING>"2";

SELECT CONCAT(FIRST_NAME,LAST_NAME) AS NAME
FROM emp_record_table WHERE DEPT="FINANCE";
   

SELECT EMP_ID,MANAGER_ID FROM emp_record_table;
SELECT 
     e.FIRST_NAME AS EMPLOYEE,
     m.FIRST_NAME AS MANAGER
FROM EMP_RECORD_TABLE e INNER JOIN EMP_RECORD_TABLE m ON e.MANAGER_ID=m.EMP_ID;

SELECT
e2.FIRST_NAME AS MANAGER,
COUNT(e1.EMP_ID) AS NO_OF_REPORTS
FROM EMP_RECORD_TABLE e1
JOIN EMP_RECORD_TABLE AS e2
ON e1.MANAGER_ID=e2.EMP_ID
WHERE e1.MANAGER_ID IS NOT NULL
GROUP BY e2.FIRST_NAME;

SELECT FIRST_NAME,LAST_NAME,DEPT FROM EMP_RECORD_TABLE WHERE DEPT="HEALTHCARE"

UNION

SELECT FIRST_NAME,LAST_NAME,DEPT FROM EMP_RECORD_TABLE WHERE DEPT="FINANCE";

SELECT
    e.EMP_ID,
    e.FIRST_NAME,
    e.LAST_NAME,
    e.ROLE,
    e.DEPT,
    e.EMP_RATING,
    max_ratings.max_emp_rating AS MAX_EMP_RATING
FROM
    EMP_RECORD_TABLE e
JOIN (
    SELECT
        DEPT,
        MAX(EMP_RATING) AS max_emp_rating
    FROM
        emp_record_table
    GROUP BY
        DEPT
) max_ratings ON e.DEPT = max_ratings.DEPT;

SELECT
    ROLE,
    MIN(SALARY) OVER (PARTITION BY ROLE) AS MinSalary,
    MAX(SALARY) OVER (PARTITION BY ROLE) AS MaxSalary
FROM
    EMP_RECORD_TABLE;

SELECT
FIRST_NAME,
EXP,
DENSE_RANK()OVER(ORDER BY EXP DESC)AS "RANK"
FROM EMP_RECORD_TABLE;

CREATE VIEW EMP_VIEW AS
SELECT 
FIRST_NAME,
COUNTRY,
SALARY
FROM EMP_RECORD_TABLE
WHERE SALARY>6000;

SELECT 
FIRST_NAME,
EXP
FROM EMP_RECORD_TABLE
WHERE EXP>10;

DELIMITER //
CREATE PROCEDURE EMPEXP()
BEGIN

SELECT EMP_ID,FIRST_NAME,LAST_NAME,GENDER,ROLE,DEPT,EXP
FROM emp_record_table
WHERE EXP>3
ORDER BY EXP;


 END //
 
 CALL EMPEXP;


SET GLOBAL log_bin_trust_function_creators = 1;
 
DELIMITER //

CREATE FUNCTION GetJobProfile(experience_in_years INT)
RETURNS VARCHAR(50)

BEGIN
    DECLARE job_profile VARCHAR(50);

    IF experience_in_years <= 2 THEN
        SET job_profile = 'JUNIOR DATA SCIENTIST';
    ELSEIF experience_in_years <= 5 THEN
        SET job_profile = 'ASSOCIATE DATA SCIENTIST';
    ELSEIF experience_in_years <= 10 THEN
        SET job_profile = 'SENIOR DATA SCIENTIST';
    ELSEIF experience_in_years <= 12 THEN
        SET job_profile = 'LEAD DATA SCIENTIST';
    ELSE
        SET job_profile = 'MANAGER';
    END IF;

    RETURN job_profile;
END //

DELIMITER ;


 SELECT
    EMP_ID,
    FIRST_NAME,
    EXP,
    GetJobProfile(EXP) AS JobProfile
FROM
    EMP_RECORD_TABLE;
    
SELECT *
FROM EMP_RECORD_TABLE
WHERE FIRST_NAME = 'Eric';

EXPLAIN SELECT *
FROM EMP_RECORD_TABLE
WHERE FIRST_NAME = 'Eric';

CREATE INDEX EMP_INDEX_first_name ON EMP_RECORD_TABLE (FIRST_NAME(100));

EXPLAIN SELECT *
FROM EMP_RECORD_TABLE
WHERE FIRST_NAME = 'Eric';

SELECT *
FROM EMP_RECORD_TABLE
WHERE FIRST_NAME = 'Eric';

SELECT
FIRST_NAME,
LAST_NAME,
SALARY,
EMP_RATING, 
ROUND(SALARY*0.05*EMP_RATING)AS "BONUS"
FROM EMP_RECORD_TABLE;

SELECT COUNTRY,CONTINENT,AVG(SALARY)AS AVG_SAL
FROM EMP_RECORD_TABLE
GROUP BY COUNTRY,CONTINENT;





